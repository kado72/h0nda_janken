{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben2_\\\\react-app\\\\src\\\\Testbtn.js\";\nimport React from 'react';\n\nclass Testbtn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'honda',\n      pcard: '',\n      count: 0,\n      ccc: 0,\n      janken: false,\n      win: false\n    };\n  } // ランダムを取得する適当な関数\n\n\n  getRandomValue(arr) {\n    var result = null;\n    var len = arr.length;\n\n    if (len > 0) {\n      result = arr[Math.floor(Math.random() * len)];\n    }\n\n    return result;\n  } // hondaとじゃんけん勝ちか負けかを判定する。\n\n\n  vshonda() {\n    const playercard = this.state.value;\n    const hondacards = ['グー', 'チョキ', 'パー'];\n    let hondacard = this.getRandomValue(hondacards);\n    alert(hondacard);\n    let count = 0;\n\n    for (let i = 0; i < 15; i++) {\n      //hondacard取得 ★難関\n      //一致するならカウント　★一致というのは見た目ではそうだが処理としてはあいこ、勝ち、負けとも取れるため。\n      if (this.state.name == hondacard) {\n        count++; //これは大丈夫みたいなので...\n      }\n    }\n\n    if (count > 13) {\n      this.setState({\n        win: true\n      });\n    } else {\n      this.setState({\n        lose: true\n      });\n    }\n  }\n\n  //クリックしたときの反応　不要\n  handleClick() {\n    this.setState({\n      count: this.state.count + 1\n    });\n    this.setState({\n      ccc: this.state.ccc + 66\n    });\n    this.setState({\n      janken: true\n    });\n    this.setState({\n      count: 0\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      value: \"\\u30D1\\u30FC\",\n      onClick: () => {\n        this.handleClick();\n        this.vshonda();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\u30D1\\u30FC\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        this.handleClick();\n        this.vshonda();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u30B0\\u30FC\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        this.handleClick();\n        this.vshonda();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\\u30C1\\u30E7\\u30AD\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u30AB\\u30A6\\u30F3\\u30C8\\u56DE\\u6570\", this.state.count, \",\", this.state.ccc, \",hondacard\")));\n  }\n\n}\n\nexport default Testbtn;","map":{"version":3,"sources":["C:\\Users\\ben2_\\react-app\\src\\Testbtn.js"],"names":["React","Testbtn","Component","constructor","props","state","name","pcard","count","ccc","janken","win","getRandomValue","arr","result","len","length","Math","floor","random","vshonda","playercard","value","hondacards","hondacard","alert","i","setState","lose","handleClick","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass Testbtn extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n    name: 'honda',\r\n    pcard: '',\r\n    count: 0,\r\n    ccc: 0,\r\n    janken: false,\r\n    win: false,\r\n  };\r\n}\r\n// ランダムを取得する適当な関数\r\n  getRandomValue(arr){\r\n  var result = null;\r\n  var len = arr.length;\r\n  if(len > 0){\r\n    result = arr[Math.floor(Math.random() * len)];\r\n  }\r\n  return result;\r\n}\r\n// hondaとじゃんけん勝ちか負けかを判定する。\r\n  vshonda(){\r\n    const playercard = this.state.value;\r\n    const hondacards = ['グー','チョキ','パー'];\r\n    let hondacard = this.getRandomValue(hondacards);\r\n    alert(hondacard);\r\n\r\n    let count=0;\r\n    for(let i=0;i<15;i++){\r\n      //hondacard取得 ★難関\r\n\r\n      //一致するならカウント　★一致というのは見た目ではそうだが処理としてはあいこ、勝ち、負けとも取れるため。\r\n      if(this.state.name == hondacard){\r\n      count++;\r\n      //これは大丈夫みたいなので...\r\n    }\r\n    }\r\n    if(count>13){\r\n      this.setState({win: true});\r\n  }else{\r\n    this.setState({lose: true});\r\n  }\r\n  };\r\n\r\n  //クリックしたときの反応　不要\r\n  handleClick() {\r\n   this.setState({count: this.state.count+1});\r\n   this.setState({ccc: this.state.ccc+66});\r\n   this.setState({janken: true});\r\n   this.setState({count: 0});\r\n  };\r\n\r\n  render(){\r\n    return(\r\n    <div>\r\n\r\n      <div>\r\n      <button\r\n      className='btn'\r\n      value = 'パー'\r\n      onClick={()=>{this.handleClick();this.vshonda()}}\r\n      >\r\n      パー\r\n      </button>\r\n      <button\r\n      className='btn'\r\n      onClick={()=>{this.handleClick();this.vshonda()}}\r\n      >\r\n      グー\r\n      </button>\r\n      <button\r\n      className='btn'\r\n      onClick={()=>{this.handleClick();this.vshonda()}}\r\n      >\r\n      チョキ\r\n      </button>\r\n\r\n      <h1>カウント回数{this.state.count},{this.state.ccc},hondacard</h1>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Testbtn;\r\n"]},"metadata":{},"sourceType":"module"}