{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben2_\\\\react-app\\\\src\\\\Testbtn.js\";\nimport React from 'react';\n\nclass Testbtn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'honda',\n      pcard: '',\n      count: 0,\n      ccc: 0,\n      janken: false,\n      win: false,\n      message: ''\n    };\n  } // ランダムを取得する適当な関数\n\n\n  getRandomValue(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n  } // hondaとじゃんけん勝ちか負けかを判定する。　this.state.value次弟で完成\n\n\n  vshonda() {\n    const playercard = this.state.value;\n    const hondacards = ['グー', 'チョキ', 'パー'];\n    let count = 0;\n    this.setState({\n      message: ''\n    });\n\n    for (let i = 0; i < 15; i++) {\n      //hondacard取得 ★難関\n      let hondacard = this.getRandomValue(hondacards);\n      alert(hondacard); //一致するならカウント　★一致というのは見た目ではそうだが処理としてはあいこ、勝ち、負けとも取れるため。\n\n      if (this.state.name == hondacard) {\n        count++; //これは大丈夫みたいなので...\n      }\n    }\n\n    if (count > 13) {\n      this.setState({\n        win: true\n      });\n      this.setState({\n        message: \"やるやん。明日は俺にリベンジさせて\"\n      });\n    } else {\n      this.setState({\n        lose: true\n      });\n      this.setState({\n        message: \"俺の勝ち！なんで負けたのか、明日まで考えといてください\"\n      });\n    }\n  }\n\n  //終わり\n  //クリックしたときの反応　不要\n  handleClick() {\n    this.setState({\n      count: this.state.count + 1\n    });\n    this.setState({\n      ccc: this.state.ccc + 66\n    });\n    this.setState({\n      janken: true\n    });\n    this.setState({\n      count: 0\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      value: \"\\u30D1\\u30FC\",\n      onClick: () => {\n        this.handleClick();\n        this.vshonda();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\\u30D1\\u30FC\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        this.handleClick();\n        this.vshonda();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u30B0\\u30FC\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        this.handleClick();\n        this.vshonda();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\u30C1\\u30E7\\u30AD\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\u30AB\\u30A6\\u30F3\\u30C8\\u56DE\\u6570\", this.state.count, \",\", this.state.ccc, \",hondacard\")));\n  }\n\n}\n\nexport default Testbtn;","map":{"version":3,"sources":["C:\\Users\\ben2_\\react-app\\src\\Testbtn.js"],"names":["React","Testbtn","Component","constructor","props","state","name","pcard","count","ccc","janken","win","message","getRandomValue","arr","Math","floor","random","length","vshonda","playercard","value","hondacards","setState","i","hondacard","alert","lose","handleClick","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass Testbtn extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n    name: 'honda',\r\n    pcard: '',\r\n    count: 0,\r\n    ccc: 0,\r\n    janken: false,\r\n    win: false,\r\n    message: '',\r\n  };\r\n}\r\n// ランダムを取得する適当な関数\r\n  getRandomValue(arr){\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n// hondaとじゃんけん勝ちか負けかを判定する。　this.state.value次弟で完成\r\n  vshonda(){\r\n    const playercard = this.state.value;\r\n    const hondacards = ['グー','チョキ','パー'];\r\n    let count=0;\r\n    this.setState({message: ''});\r\n\r\n    for(let i=0;i<15;i++){\r\n      //hondacard取得 ★難関\r\n      let hondacard = this.getRandomValue(hondacards);\r\n      alert(hondacard);\r\n      //一致するならカウント　★一致というのは見た目ではそうだが処理としてはあいこ、勝ち、負けとも取れるため。\r\n      if(this.state.name == hondacard){\r\n      count++;\r\n      //これは大丈夫みたいなので...\r\n    }\r\n    }\r\n    if(count>13){\r\n      this.setState({win: true});\r\n      this.setState({message: \"やるやん。明日は俺にリベンジさせて\"});\r\n    }else{\r\n      this.setState({lose: true});\r\n      this.setState({message: \"俺の勝ち！なんで負けたのか、明日まで考えといてください\"});\r\n    }\r\n  };\r\n  //終わり\r\n\r\n  //クリックしたときの反応　不要\r\n  handleClick() {\r\n   this.setState({count: this.state.count+1});\r\n   this.setState({ccc: this.state.ccc+66});\r\n   this.setState({janken: true});\r\n   this.setState({count: 0});\r\n  };\r\n\r\n  render(){\r\n    return(\r\n    <div>\r\n\r\n      <div>\r\n      <button\r\n      className='btn'\r\n      value = 'パー'\r\n      onClick={()=>{this.handleClick();this.vshonda()}}\r\n      >\r\n      パー\r\n      </button>\r\n      <button\r\n      className='btn'\r\n      onClick={()=>{this.handleClick();this.vshonda()}}\r\n      >\r\n      グー\r\n      </button>\r\n      <button\r\n      className='btn'\r\n      onClick={()=>{this.handleClick();this.vshonda()}}\r\n      >\r\n      チョキ\r\n      </button>\r\n\r\n      <h1>カウント回数{this.state.count},{this.state.ccc},hondacard</h1>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Testbtn;\r\n"]},"metadata":{},"sourceType":"module"}